---
  title: |
  | "PH700A Week 10"
subtitle: |
  | Lab Assignment 10
| PH 700A, Spring 2025
author: "Theresa Pere"
format: html
editor: source
---
  
  
  ## Data Import and Package Load
  
  ```{r}
#| title: data initalization
#| include: false

library(data.table)
library(tidyverse)

# Primary Data Import from GitHub
df.ed <- fread("https://github.com/core-academics/sdsu.ph700a/raw/refs/heads/main/data/mimic4ed/edstays.csv.gz")

df.triage <- fread("https://github.com/core-academics/sdsu.ph700a/raw/refs/heads/main/data/mimic4ed/triage.csv.gz")

df.vitalsign <- fread("https://github.com/core-academics/sdsu.ph700a/raw/refs/heads/main/data/mimic4ed/vitalsign.csv.gz")

df.dx <- fread("https://github.com/core-academics/sdsu.ph700a/raw/refs/heads/main/data/mimic4ed/diagnosis.csv.gz")

df.meds <- fread("https://github.com/core-academics/sdsu.ph700a/raw/refs/heads/main/data/mimic4ed/medrecon.csv.gz")

df.pyxis <- fread("https://github.com/core-academics/sdsu.ph700a/raw/refs/heads/main/data/mimic4ed/pyxis.csv.gz")

df.ed <- df.ed %>% mutate(los = outtime-intime)

df.ed <- df.ed %>% mutate(across(c("gender", "race"), as.factor))

df.triage <- df.triage %>% mutate(fever = if_else(temperature >= 100.4, 1, 0))

df.triage <- df.triage %>%
  mutate(weakness = if_else(
    grepl("[Ww]eakness", chiefcomplaint),
    1,
    0)
  )
df.triage <- df.triage %>%
  mutate(chiefcomplaint = str_replace_all(chiefcomplaint, c("s/p" = "status post", "S/P" = "status post")))

df <- left_join(df.ed, df.triage, by = "stay_id")
df$subject_id.y <- NULL
df <- df %>% rename(subject_id = subject_id.x)

df <- df %>% mutate(highpain = case_when(
  pain == "13" ~ 1,
  pain == "10" ~ 1,
  pain == "9" ~ 1,
  pain == "8" ~ 1,
  pain == "Critical" ~ 1,
  pain == "ett" ~ 1,
  pain == "o" ~ 1,
  pain == "UA" ~ 1,
  pain == "unable" ~ 1,
  pain == "uta" ~ 1,
  .default = 0
))

df <- df %>% mutate(pain_noscore = case_when(
  pain == "Critical" ~ 1,
  pain == "ett" ~ 1,
  pain == "o" ~ 1,
  pain == "UA" ~ 1,
  pain == "unable" ~ 1,
  pain == "uta" ~ 1,
  pain == "" ~ 1,
  .default = 0
))

df <- df %>% mutate(hypotensive = if_else(sbp <100, 1, 0))

df <- df %>% mutate(racewhite = if_else(grepl("WHITE", race), 1, 0))  

df <- df %>% mutate(lnlos = log(as.numeric(los)))

df.dx <- df.dx %>% mutate(across(icd_title, tolower))

rm(df.triage, df.ed)

# Generating a 3-category disposition variable with Home as the base category
df <- df %>%
  mutate(disp3cat = case_when(
    disposition == "HOME" ~ "HOME",
    disposition == "ADMITTED" ~ "ADMITTED",
    .default = "OTHER"
  ))

df <- df %>%
  mutate(across(c("disp3cat", "racewhite", "arrival_transport", "gender"), as.factor))

df$disp3cat <- relevel(df$disp3cat, ref = "HOME")

## Generating In-hospital Complications Variable
df.dx$comp <- NA

df.dx <- df.dx %>%
  mutate(comp = if_else(grepl("urin tract", icd_title), 1, comp),
         comp = if_else(grepl("sepsis", icd_title), 1, comp),
         comp = if_else(grepl("septic", icd_title), 1, comp),
         comp = if_else(grepl("adv eff medicinal nos", icd_title), 1, comp),
         comp = if_else(grepl("post-op", icd_title), 1, comp),
         comp = if_else(grepl("postop", icd_title), 1, comp),
         comp = if_else(grepl("complication", icd_title), 1, comp),
         comp = if_else(grepl("misadv", icd_title), 1, comp),
         comp = if_else(grepl("urin tract", icd_title), 1, comp),
         comp = if_else(grepl("following a procedure", icd_title), 1, comp),
         comp = if_else(grepl("without complications", icd_title), 0, comp)
  )

comps <- df.dx  %>% filter(comp == 1) %>% distinct(stay_id, comp)

df <- left_join(df, comps, by = "stay_id")

rm(comps)

df <- df %>% mutate(comp = if_else(is.na(comp), 0, comp))

## Capturing Opioid Usage Variable
df.pyxis <- df.pyxis %>% mutate(across(name, tolower))

df.pyxis <- df.pyxis %>%
  mutate(opioidtag = case_when(
    grepl("codeine", name) ~ 1,
    grepl("fentanyl", name) ~ 1,
    grepl("duragesic", name) ~ 1,
    grepl("hydrocodone", name) ~ 1,
    grepl("vicodin", name) ~ 1,
    grepl("norco", name) ~ 1,
    grepl("lortab", name) ~ 1,
    grepl("hydromorphone", name) ~ 1,
    grepl("dilaudid", name) ~ 1,
    grepl("methadone", name) ~ 1,
    grepl("morphine", name) ~ 1,
    grepl("oxycodone", name) ~ 1,
    grepl("oxycontin", name) ~ 1,
    grepl("roxicodone", name) ~ 1,
    grepl("oxymorphone", name) ~ 1,
    grepl("tapentadol", name) ~ 1,
    grepl("tramadol", name) ~ 1,
    grepl("ultram", name) ~ 1,
    grepl("buprenorphine", name) ~ 1,
    .default = 0
  ))

opioids <- df.pyxis %>%
  filter(opioidtag == 1)

# Generating Opioid Usage Ordinal Variable
opioids <- opioids %>%
  group_by(stay_id) %>%
  summarise(opioidsum = sum(opioidtag))

df <- left_join(df, opioids, by = "stay_id")
df$opioidsum <- ifelse(is.na(df$opioidsum), 0, df$opioidsum)

rm(opioids)

df <- df %>%
  mutate(opioidlvl = case_when(
    opioidsum == 0 ~ "None",
    opioidsum == 1 ~ "Mild",
    opioidsum == 2 ~ "Moderate",
    opioidsum >= 3 ~ "Extreme"
  ))
df <- df %>%
  select(-opioidsum) %>%
  mutate(across(opioidlvl, as.factor))

table(df$opioidlvl)
df$opioidlvl <- factor(df$opioidlvl, levels = c("None", "Mild", "Moderate", "Extreme"), ordered = TRUE)

df <- df %>%
  mutate(admitted = if_else(disp3cat == "ADMITTED", 1, 0),
         ambulance = if_else(arrival_transport == "AMBULANCE", 1, 0))

df$ambulance <- as.factor(df$ambulance)
df$los <- as.numeric(df$los)
df$admitted <- as.numeric(df$admitted)
```

## Data Modifications

The `df` data frame contains all the modifications from Week 9. Additional changes include:
  
  -   Column `disp3cat` that was originally derived from `disposition` has been dichotomized as `admitted` and converted to a _numeric_ type

-   Patients that were "ADMITTED" to the hospital are `admitted` == 1

-   Patients that were "OTHER" or "HOME" are now `admitted` == 0

-   Column `arrival_transport` has been dichotomized as `ambulance` and converted to a _factor_ type

-   Patients who arrived via "AMBULANCE" are `ambulance` == 1

-   Patients who arrived via any other means are `ambulance` == 0

-   Column `los` was stripped of its time units and converted to a _numeric_ type

## Survival Object Generation
```{r}
library(survival)

surv.losadmit <- Surv(time = df$los, event = as.numeric(df$admitted))
```

## Original Model
```{r}
km.m1 <- survfit(surv.losadmit ~ ambulance, data = df)
km.m1
```

## Scenario

The center seeks to better understand predictors of admission (vs. not) among patients who presented to the emergency department. Although arrival via `ambulance` appeared to predict admission, a survival analysis that accounted for time in the ED (`los`) found no association (`km.m1`). Please evalute other potential predictors of `admitted` in the context of survival analysis.

#check log-rank test
>survdiff(surv.losadmit ~ ambulance, data = df, rho = 0)

#no statistical difference p=0.7, ambulance not associated with admission legnth in patients that arrived to ED in ambulance and those who did not


#fit kmmodel by highpain, patients who go to ED with higher pain are more likely to be admitted at a faster time than those who present with lower reported pain
>km.hp <- survfit(surv.losadmit ~ highpain, data = df)
>ggsurvplot(km.hp, data = df, risk.table = TRUE, pval = TRUE, conf.int = TRUE)

'''
p=0.28 no significance, null hypothesis
survival curve do not look very different 
'''

#fit kmmodel by hypotensive, patients who to to ED with hyportension <100mmHg are more likely to be admitted at a faster time than those patients who present with a normal bloodpresure 

>km.htn <- survfit(surv.losadmit ~ hypotensive, data = df)
>ggsurvplot(km.htn, data = df, risk.table = TRUE, pval = TRUE, conf.int = TRUE)

'''
p=0.74 no significance, null hypothesis
because n=14 for hypotensive patients, while they were admitted in less time that non hypotensive patients, the sample is too small to draw significant conclusions 
